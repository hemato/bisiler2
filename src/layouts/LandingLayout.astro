---
import { getLangFromUrl } from '../i18n/utils';
import CookieBanner from '../components/CookieBanner';
import {
  generateOrganizationSchema,
  generateWebsiteSchema,
  injectStructuredData
} from '../utils/structured-data';

export interface Props {
  title: string;
  description?: string;
  structuredData?: any;
  ogImage?: string;
  twitterImage?: string;
  canonical?: string;
  isHomepage?: boolean;
  pageType?: 'website' | 'crm';
}

const { title, description, structuredData, ogImage, twitterImage, canonical, isHomepage = false, pageType = 'website' } = Astro.props;
const lang = getLangFromUrl(Astro.url);

const translations = lang === 'en'
  ? await import('../i18n/en.json')
  : await import('../i18n/tr.json');

const t = translations.default;

// Generate default structured data
const organizationSchema = generateOrganizationSchema(lang);
const websiteSchema = generateWebsiteSchema(lang);

// Default images for social media
const defaultOgImage = ogImage || '/og-image.jpg';
const defaultTwitterImage = twitterImage || ogImage || '/twitter-image.jpg';
const siteUrl = 'https://techcorp.com'; // Bu URL'yi gerçek domain ile değiştirin
const canonicalUrl = canonical || Astro.url.href;

// Navigation items based on page type
const navigationItems = pageType === 'website' ? [
  { href: '#hero', label: 'Ana Sayfa' },
  { href: '#features', label: 'Özellikler' },
  { href: '#packages', label: 'Paketler' },
  { href: '#process', label: 'Süreç' },
  { href: '#testimonials', label: 'Referanslar' },
  { href: '#contact-form', label: 'İletişim' }
] : [
  { href: '#hero', label: 'Ana Sayfa' },
  { href: '#features', label: 'Özellikler' },
  { href: '#process', label: 'Süreç' },
  { href: '#success-stories', label: 'Başarı Hikayeleri' },
  { href: '#contact-form', label: 'İletişim' }
];

// Current page URL for logo link
const currentPageUrl = Astro.url.pathname;

// Language switcher URLs
const languageSwitcher = {
  current: lang,
  urls: pageType === 'website' ? {
    tr: '/web-sitesi-kurma',
    en: '/en/website-setup'
  } : {
    tr: '/crm-danismanligi',
    en: '/en/crm-consulting'
  }
};
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || t.site.description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description || t.site.description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:site_name" content="TechCorp" />
    <meta property="og:image" content={new URL(defaultOgImage, siteUrl).href} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:type" content="image/jpeg" />
    <meta property="og:locale" content={lang === 'en' ? 'en_US' : 'tr_TR'} />
    {lang === 'en' && <meta property="og:locale:alternate" content="tr_TR" />}
    {lang === 'tr' && <meta property="og:locale:alternate" content="en_US" />}
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@techcorp" />
    <meta name="twitter:creator" content="@techcorp" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description || t.site.description} />
    <meta name="twitter:image" content={new URL(defaultTwitterImage, siteUrl).href} />
    <meta name="twitter:image:alt" content={`${title} - TechCorp`} />
    
    <!-- Additional SEO Meta Tags -->
    <meta name="robots" content="index, follow" />
    <meta name="author" content="TechCorp" />
    <meta name="language" content={lang === 'en' ? 'English' : 'Turkish'} />
    <meta name="revisit-after" content="7 days" />
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Structured Data (JSON-LD) -->
    {isHomepage && <Fragment set:html={injectStructuredData(organizationSchema)} />}
    {isHomepage && <Fragment set:html={injectStructuredData(websiteSchema)} />}
    {structuredData && (
      Array.isArray(structuredData)
        ? structuredData.map(schema => <Fragment set:html={injectStructuredData(schema)} />)
        : <Fragment set:html={injectStructuredData(structuredData)} />
    )}
  </head>
  <body class="font-sans">
    <!-- Landing Page Specific Navigation -->
    <nav class="fixed top-0 left-0 right-0 bg-white/95 backdrop-blur-md border-b border-gray-200 z-50 shadow-sm">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <!-- Logo -->
          <div class="flex items-center">
            <a
              href={currentPageUrl}
              class="text-2xl font-bold text-blue-600"
              onclick="event.preventDefault(); document.getElementById('hero').scrollIntoView({ behavior: 'smooth' })"
            >
              TechCorp
            </a>
          </div>
          
          <!-- Desktop Navigation -->
          <div class="hidden md:flex items-center space-x-6">
            {navigationItems.map((item) => (
              <a
                href={item.href}
                class="text-gray-700 hover:text-blue-600 transition-colors text-sm font-medium"
                onclick="event.preventDefault(); document.querySelector(this.getAttribute('href')).scrollIntoView({ behavior: 'smooth' })"
              >
                {item.label}
              </a>
            ))}
            
            <!-- Language Switcher -->
            <div class="flex items-center space-x-2 ml-4 border-l border-gray-300 pl-4">
              <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"></path>
              </svg>
              <a
                href={languageSwitcher.urls.tr}
                class={`text-sm font-medium transition-colors ${languageSwitcher.current === 'tr' ? 'text-blue-600' : 'text-gray-600 hover:text-blue-600'}`}
              >
                TR
              </a>
              <span class="text-gray-400">|</span>
              <a
                href={languageSwitcher.urls.en}
                class={`text-sm font-medium transition-colors ${languageSwitcher.current === 'en' ? 'text-blue-600' : 'text-gray-600 hover:text-blue-600'}`}
              >
                EN
              </a>
            </div>
          </div>
          
          <!-- Mobile Menu Button -->
          <div class="md:hidden flex items-center space-x-3">
            <!-- Mobile Language Switcher -->
            <div class="flex items-center space-x-1">
              <a
                href={languageSwitcher.urls.tr}
                class={`px-2 py-1 text-xs font-medium rounded transition-colors ${languageSwitcher.current === 'tr' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-blue-600'}`}
              >
                TR
              </a>
              <a
                href={languageSwitcher.urls.en}
                class={`px-2 py-1 text-xs font-medium rounded transition-colors ${languageSwitcher.current === 'en' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-blue-600'}`}
              >
                EN
              </a>
            </div>
            
            <button
              id="mobile-menu-button"
              class="text-gray-700 hover:text-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              onclick="toggleMobileMenu()"
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </div>
        
        <!-- Mobile Navigation -->
        <div id="mobile-menu" class="md:hidden hidden bg-white border-t border-gray-200">
          <div class="px-2 pt-2 pb-3 space-y-1">
            {navigationItems.map((item) => (
              <a
                href={item.href}
                class="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 transition-colors text-sm font-medium"
                onclick="event.preventDefault(); document.querySelector(this.getAttribute('href')).scrollIntoView({ behavior: 'smooth' }); toggleMobileMenu()"
              >
                {item.label}
              </a>
            ))}
          </div>
        </div>
      </div>
    </nav>
    
    <!-- Main Content with top padding for fixed nav -->
    <main class="pt-16">
      <slot />
    </main>
    
    <!-- No Footer for Landing Pages -->
    
    <CookieBanner client:load />
    
    <!-- Mobile Menu Toggle Script -->
    <script>
      function toggleMobileMenu() {
        const mobileMenu = document.getElementById('mobile-menu');
        const menuButton = document.getElementById('mobile-menu-button');
        
        if (mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.remove('hidden');
          menuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          `;
        } else {
          mobileMenu.classList.add('hidden');
          menuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          `;
        }
      }
      
      // Make function global
      window.toggleMobileMenu = toggleMobileMenu;
      
      // Close mobile menu when clicking outside
      document.addEventListener('click', function(event) {
        const mobileMenu = document.getElementById('mobile-menu');
        const menuButton = document.getElementById('mobile-menu-button');
        
        if (!mobileMenu.contains(event.target) && !menuButton.contains(event.target)) {
          mobileMenu.classList.add('hidden');
          menuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          `;
        }
      });
    </script>
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  
  body {
    margin: 0;
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  * {
    box-sizing: border-box;
  }
  
  /* Smooth scrolling for anchor links */
  html {
    scroll-padding-top: 80px;
  }
</style>