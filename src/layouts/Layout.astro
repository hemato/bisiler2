---
import { getLangFromUrl } from '../i18n/utils';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import CookieBanner from '../components/CookieBanner';
import {
  generateOrganizationSchema,
  generateWebsiteSchema,
  injectStructuredData
} from '../utils/structured-data';
import { COMPANY_INFO } from '../config/company';
import { CONTACT_INFO } from '../config/contact';
import { DOMAIN_CONFIG, getUrl, getCanonicalUrl } from '../config/domain';
import { getRouteKey, generateHrefLang, getRoute } from '../utils/routes';
import { generateBreadcrumbSchema } from '../utils/structured-data';
import { ANALYTICS_CONFIG } from '../config/analytics';

export interface Props {
  title: string;
  description?: string;
  structuredData?: any;
  ogImage?: string;
  twitterImage?: string;
  canonical?: string;
  isHomepage?: boolean;
  hideFooter?: boolean;
  isLandingPage?: boolean;
  hreflang?: Array<{lang: string, url: string}>;
  breadcrumbs?: Array<{name: string, url: string}>;
}

const { title, description, structuredData, ogImage, twitterImage, canonical, isHomepage = false, hideFooter = false, isLandingPage = false, hreflang, breadcrumbs } = Astro.props;
const lang = getLangFromUrl(Astro.url);

const translations = lang === 'en'
  ? await import('../i18n/en.json')
  : await import('../i18n/tr.json');

const t = translations.default;

// Auto-generate hreflang if not provided
const currentRouteKey = getRouteKey(Astro.url.pathname);
const autoHreflang = currentRouteKey ? generateHrefLang(currentRouteKey) : null;
const hreflangData = hreflang || autoHreflang;

// Auto-generate breadcrumbs if not provided
const autoBreadcrumbs = currentRouteKey ? [
  { name: t.nav.home || (lang === 'en' ? 'Home' : 'Anasayfa'), url: getRoute(lang, 'home') },
  ...(currentRouteKey !== 'home' ? [{ name: title, url: Astro.url.pathname }] : [])
] : null;
const breadcrumbData = breadcrumbs || autoBreadcrumbs;

// Generate breadcrumb structured data
const breadcrumbSchema = breadcrumbData ? generateBreadcrumbSchema(breadcrumbData) : null;

// Generate default structured data
const organizationSchema = generateOrganizationSchema(lang);
const websiteSchema = generateWebsiteSchema(lang);

// Default images for social media
const defaultOgImage = ogImage || DOMAIN_CONFIG.images.ogImage;
const defaultTwitterImage = twitterImage || ogImage || DOMAIN_CONFIG.images.twitterImage;
const canonicalUrl = canonical || getCanonicalUrl(Astro.url.pathname);
const siteUrl = DOMAIN_CONFIG.baseUrl;
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || t.site.description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href={DOMAIN_CONFIG.images.favicon} />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Hreflang Tags -->
    {hreflangData && hreflangData.map(({ lang: hrefLang, url }) => (
      <link rel="alternate" hreflang={hrefLang} href={url} />
    ))}
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description || t.site.description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:site_name" content={COMPANY_INFO.name} />
    <meta property="og:image" content={new URL(defaultOgImage, siteUrl).href} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:type" content="image/jpeg" />
    <meta property="og:locale" content={lang === 'en' ? 'en_US' : 'tr_TR'} />
    {lang === 'en' && <meta property="og:locale:alternate" content="tr_TR" />}
    {lang === 'tr' && <meta property="og:locale:alternate" content="en_US" />}
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content={CONTACT_INFO.social.twitterHandle} />
    <meta name="twitter:creator" content={CONTACT_INFO.social.twitterHandle} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description || t.site.description} />
    <meta name="twitter:image" content={new URL(defaultTwitterImage, siteUrl).href} />
    <meta name="twitter:image:alt" content={`${title} - ${COMPANY_INFO.name}`} />
    
    <!-- Additional SEO Meta Tags -->
    <meta name="robots" content="index, follow" />
    <meta name="author" content={COMPANY_INFO.name} />
    <meta name="language" content={lang === 'en' ? 'English' : 'Turkish'} />
    <meta name="revisit-after" content="7 days" />
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Preload critical font for better performance -->
    <link rel="preload" as="font" type="font/woff2" href="https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2" crossorigin />
    
    <!-- DNS prefetch for external resources -->
    <link rel="dns-prefetch" href="https://images.pexels.com" />
    <link rel="dns-prefetch" href="https://www.googletagmanager.com" />
    <link rel="dns-prefetch" href="https://www.google-analytics.com" />
    <link rel="dns-prefetch" href="https://connect.facebook.net" />
    
    <!-- Analytics Scripts -->
    {ANALYTICS_CONFIG.gtm.enabled && (
      <>
        <!-- Google Tag Manager -->
        <script define:vars={{ gtmId: ANALYTICS_CONFIG.gtm.containerId }}>
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer',gtmId);
        </script>
      </>
    )}
    
    {ANALYTICS_CONFIG.ga4.enabled && (
      <>
        <!-- Google Analytics 4 -->
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${ANALYTICS_CONFIG.ga4.measurementId}`}></script>
        <script define:vars={{
          measurementId: ANALYTICS_CONFIG.ga4.measurementId,
          anonymizeIp: ANALYTICS_CONFIG.ga4.anonymizeIp,
          debugMode: ANALYTICS_CONFIG.ga4.debugMode,
          isLandingPage: isLandingPage,
          isHomepage: isHomepage
        }}>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          
          gtag('config', measurementId, {
            anonymize_ip: anonymizeIp,
            debug_mode: debugMode,
            page_title: document.title,
            page_location: window.location.href,
            page_language: document.documentElement.lang || 'tr',
            custom_map: {
              'custom_parameter_1': 'page_type',
              'custom_parameter_2': 'form_type',
              'custom_parameter_3': 'campaign_source'
            }
          });
          
          // Track page view
          gtag('event', 'page_view', {
            page_title: document.title,
            page_location: window.location.href,
            page_language: document.documentElement.lang || 'tr',
            page_type: isLandingPage ? 'landing' : 'regular',
            is_homepage: isHomepage
          });
        </script>
      </>
    )}
    
    {ANALYTICS_CONFIG.fbPixel.enabled && (
      <>
        <!-- Facebook Pixel -->
        <script define:vars={{ fbPixelId: ANALYTICS_CONFIG.fbPixel.pixelId }}>
          !function(f,b,e,v,n,t,s)
          {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
          n.callMethod.apply(n,arguments):n.queue.push(arguments)};
          if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
          n.queue=[];t=b.createElement(e);t.async=!0;
          t.src=v;s=b.getElementsByTagName(e)[0];
          s.parentNode.insertBefore(t,s)}(window, document,'script',
          'https://connect.facebook.net/en_US/fbevents.js');
          fbq('init', 1234567890123456);
          fbq('track', 'PageView');
        </script>
      </>
    )}
    
    <!-- Structured Data (JSON-LD) -->
    {isHomepage && <Fragment set:html={injectStructuredData(organizationSchema)} />}
    {isHomepage && <Fragment set:html={injectStructuredData(websiteSchema)} />}
    {breadcrumbSchema && <Fragment set:html={injectStructuredData(breadcrumbSchema)} />}
    {structuredData && (
      Array.isArray(structuredData)
        ? structuredData.map(schema => <Fragment set:html={injectStructuredData(schema)} />)
        : <Fragment set:html={injectStructuredData(structuredData)} />
    )}
  </head>
  <body class="font-sans">
    <!-- Google Tag Manager (noscript) -->
    {ANALYTICS_CONFIG.gtm.enabled && (
      <noscript><iframe src={`https://www.googletagmanager.com/ns.html?id=${ANALYTICS_CONFIG.gtm.containerId}`}
      height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    )}

    <noscript><img height="1" width="1" style="display:none"
          src={`https://www.facebook.com/tr?id=${ANALYTICS_CONFIG.fbPixel.pixelId}&ev=PageView&noscript=1`}
    /></noscript>

    <!-- UTM Parameter Tracking -->
    <script>
      // Store UTM parameters and track page load
      (function() {
        if (typeof window !== 'undefined') {
          // Store UTM parameters
          const urlParams = new URLSearchParams(window.location.search);
          const utmParams = {
            source: urlParams.get('utm_source') || 'direct',
            medium: urlParams.get('utm_medium') || 'none',
            campaign: urlParams.get('utm_campaign') || 'none',
            term: urlParams.get('utm_term') || 'none',
            content: urlParams.get('utm_content') || 'none'
          };
          
          // Store in sessionStorage for later use
          sessionStorage.setItem('utm_parameters', JSON.stringify(utmParams));
          
          // Track UTM parameters with GA4
          if (window.gtag) {
            window.gtag('event', 'page_view_with_utm', {
              utm_source: utmParams.source,
              utm_medium: utmParams.medium,
              utm_campaign: utmParams.campaign,
              utm_term: utmParams.term,
              utm_content: utmParams.content
            });
          }
          
          // Track with Facebook Pixel
          if (window.fbq) {
            window.fbq('track', 'ViewContent', {
              content_category: 'page_view',
              utm_source: utmParams.source,
              utm_medium: utmParams.medium,
              utm_campaign: utmParams.campaign
            });
          }
        }
      })();
    </script>
    
    <Navigation isLandingPage={isLandingPage} />
    {breadcrumbData && !isLandingPage && (
      <div class="bg-secondary-50 border-b border-secondary-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
          <Breadcrumb items={breadcrumbData} />
        </div>
      </div>
    )}
    <main>
      <slot />
    </main>
    {!hideFooter && <Footer />}
    <CookieBanner client:load />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  
  body {
    margin: 0;
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  * {
    box-sizing: border-box;
  }
</style>
